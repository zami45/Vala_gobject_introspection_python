/* hello.h generated by valac 0.56.18, the Vala compiler, do not modify */

#ifndef __HELLO_H__
#define __HELLO_H__

#include <glib-object.h>
#include <glib.h>

G_BEGIN_DECLS

#if !defined(VALA_EXTERN)
#if defined(_MSC_VER)
#define VALA_EXTERN __declspec(dllexport) extern
#elif __GNUC__ >= 4
#define VALA_EXTERN __attribute__((visibility("default"))) extern
#else
#define VALA_EXTERN extern
#endif
#endif

#define HELLO_TYPE_HELLO_WORLD (hello_hello_world_get_type ())
#define HELLO_HELLO_WORLD(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), HELLO_TYPE_HELLO_WORLD, HelloHelloWorld))
#define HELLO_HELLO_WORLD_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), HELLO_TYPE_HELLO_WORLD, HelloHelloWorldClass))
#define HELLO_IS_HELLO_WORLD(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), HELLO_TYPE_HELLO_WORLD))
#define HELLO_IS_HELLO_WORLD_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), HELLO_TYPE_HELLO_WORLD))
#define HELLO_HELLO_WORLD_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), HELLO_TYPE_HELLO_WORLD, HelloHelloWorldClass))

typedef struct _HelloHelloWorld HelloHelloWorld;
typedef struct _HelloHelloWorldClass HelloHelloWorldClass;
typedef struct _HelloHelloWorldPrivate HelloHelloWorldPrivate;

struct _HelloHelloWorld {
	GObject parent_instance;
	HelloHelloWorldPrivate * priv;
};

struct _HelloHelloWorldClass {
	GObjectClass parent_class;
};

VALA_EXTERN GType hello_hello_world_get_type (void) G_GNUC_CONST ;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (HelloHelloWorld, g_object_unref)
VALA_EXTERN void hello_hello_world_say_hello (HelloHelloWorld* self);
VALA_EXTERN HelloHelloWorld* hello_hello_world_new (void);
VALA_EXTERN HelloHelloWorld* hello_hello_world_construct (GType object_type);

G_END_DECLS

#endif
